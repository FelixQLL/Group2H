#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

#include "ch.h"
#include "hal.h"
#include "memory_protection.h"
#include <main.h>
#include "sensors/proximity.h"
#include "motors.h"

int main(void)
{

    halInit();
    chSysInit();
    mpu_init();


    /* Infinite loop. */
    while (1) {
    	//Task1
    	left_motor_set_speed(200);
    	right_motor_set_speed(200);

    	if(get_prox(3) > 0 && get_prox(3) < 100){
    		left_motor_set_speed(500);
    		right_motor_set_speed(-200);

    		chThdSleepMilliseconds(500);
    	}
    	else if(get_prox(3) >= 100){
    		left_motor_set_speed(500);
    		right_motor_set_speed(100);

    		chThdSleepMilliseconds(500);
    	}
    	if(get_prox(4) > 0 && get_prox(4) < 100){
    	    left_motor_set_speed(-200);
    	    right_motor_set_speed(500);

    	    chThdSleepMilliseconds(500);
    	}
    	else if(get_prox(4) >= 100){
    	    left_motor_set_speed(100);
    	    right_motor_set_speed(500);

    	    chThdSleepMilliseconds(500);
    	}


    	//Task2
    	//no objects around e-puck2, go forward
    	if(get_prox(1) == 0 && get_prox(2) == 0 && get_prox(3) == 0
    			&& get_prox(4) == 0 && get_prox(5) == 0
				&& get_prox(6) == 0 && get_prox(7) == 0
				&& get_prox(8) == 0){
    		left_motor_set_speed(500);
    		right_motor_set_speed(500);
    	}
    	//e-puck2 arrived around the object, stop to avoid collision
    	int StopDis = 20;
    	if((get_prox(1) > 0 && get_prox(1) < StopDis)
    			&& (get_prox(2) > 0 && get_prox(2) < StopDis)
				&& (get_prox(3) > 0 && get_prox(3) < StopDis)
				&& (get_prox(4) > 0 && get_prox(4) < StopDis)
				&& (get_prox(5) > 0 && get_prox(5) < StopDis)
				&& (get_prox(6) > 0 && get_prox(6) < StopDis)
				&& (get_prox(7) > 0 && get_prox(7) < StopDis)
				&& (get_prox(8) > 0 && get_prox(8) < StopDis)
				){
    	    left_motor_set_speed(0);
    	    right_motor_set_speed(0);
    	}

    }
}

#define STACK_CHK_GUARD 0xe2dee396
uintptr_t __stack_chk_guard = STACK_CHK_GUARD;

void __stack_chk_fail(void)
{
    chSysHalt("Stack smashing detected");
}
